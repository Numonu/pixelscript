---
type Resolution = readonly [number, number];
interface Data {
    resolution: Resolution;
    size: number;
    src: string;
}
const actions: Data[] = [
    { resolution: [2048, 1080], size: 30, src: "" },
    { resolution: [1080, 720], size: 20, src: "" },
    { resolution: [720, 110], size: 10, src: "" },
];
---
<style>
    .reveal{
        animation : reveal .2s ease;
    }
    @keyframes reveal {
        from{opacity:0; scale: .8;}
        to{opacity: 1; scale: 1;}
    }
</style>
<div class="relative">
    <button
        id="btn-toggle"
        class="bg-zinc-800 relative px-4 py-2 text-sm uppercase rounded-md hover:bg-zinc-700 transition-colors"
    >
        <span class="mr-2"> download</span>
        <i class="fa-solid fa-chevron-down"></i>
    </button>
    <div
        id="downloads"
        class="bg-zinc-800 reveal absolute w-[160%] p-2 rounded-md origin-top-right right-0 bottom-0 translate-y-[105%]"
    >
        {
            actions.map((e: Data) => {
                return (
                    <button class="w-full flex justify-between p-2 text-sm rounded-sm hover:bg-zinc-700 transition-colors">
                        <span class="text-neutral-100">
                            {e.resolution[0]}
                            <span class="text-xs">x</span>
                            {e.resolution[1]}
                        </span>
                        <span>
                            {e.size}
                            <span class="text-xs">mb</span>
                        </span>
                    </button>
                );
            })
        }
    </div>
</div>

<script>
    let show = false;
    const btn = document.getElementById("btn-toggle");
    const downloads = document.getElementById("downloads");

    btn?.addEventListener("click" , () => {
        if(downloads) 
            downloads.style.display = show ? "block" : "none";
        show = !show;
    })
</script>