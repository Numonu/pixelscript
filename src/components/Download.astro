---
export type Action = {
    size: number;
    src: string;
}
interface Props {
    title : string;
    actions: Action[];
}
const { actions , title } = Astro.props;
---

<style>
    .reveal {
        animation: reveal 0.2s ease;
    }
    @keyframes reveal {
        from {
            opacity: 0;
            scale: 0.8;
        }
        to {
            opacity: 1;
            scale: 1;
        }
    }
</style>
<div class="relative">
    <button
        id={`btn-${title}`}
        class="bg-zinc-800 relative px-4 py-2 text-sm uppercase rounded-md hover:bg-zinc-700 transition-colors"
    >
        <span class="mr-2"> download</span>
        <i class="fa-solid fa-chevron-down"></i>
    </button>
    <div
        style="display:none"
        id={`downloads-${title}`}
        class="bg-zinc-800 reveal absolute w-[120%] z-10 p-2 rounded-md origin-top-right right-0 bottom-0 translate-y-[105%]"
    >
        {
            actions.map((e: Action , i) => {
                return (
                    <a download={title} href={e.src} target="_blank">
                        <button class="w-full flex justify-between p-2 text-sm rounded-md hover:bg-zinc-700 transition-colors">
                            <span>
                                {[2048,1548,1248][i]}
                                <span class="text-xs">x</span>
                                {[1080,816,658][i]}
                            </span>
                            <i class="fa-solid fa-download"></i>
                        </button>
                    </a>
                );
            })
        }
    </div>
</div>

<script define:vars={{title,actions}}>
    //display dialog
    let show = true;
    const btn = document.getElementById(`btn-${title}`);
    const downloads = document.getElementById(`downloads-${title}`);
    btn?.addEventListener("click", () => {
        if (downloads) downloads.style.display = show ? "block" : "none";
        show = !show;
    });
</script>
